import * as THREE from "three";
import { FieldOptions } from "../core/Field";

/**
 * Defines the noise configuration for the nebula shader. These parameters
 * control the appearance of the procedural noise generated by the Fractional
 * Brownian Motion (fbm) function in the shader.
 */
export interface NebulaNoiseOptions {
  /** The overall scale of the noise pattern. Larger values zoom out. */
  scale: number;
  /** The number of noise layers to combine. More octaves add detail. */
  octaves: number;
  /** How much each successive octave contributes. (0-1) */
  persistence: number;
  /** How much the frequency increases for each successive octave. (>1) */
  lacunarity: number;
  /** A random seed to generate different noise patterns. */
  seed: number;
}

/**
 * Defines the complete set of options for creating a NebulaField.
 */
export interface NebulaFieldOptions extends FieldOptions {
  /** The average distance of the nebula sphere from the origin. */
  baseDistance: number;
  /** The radius of the nebula sphere geometry. */
  size: number;
  /** An array of 6 `THREE.Color` objects that define the color palette. */
  colors: THREE.Color[];
  /** The overall transparency of the nebula. (0-1) */
  alpha: number;
  /** The configuration for the procedural noise shader. */
  noiseConfig: NebulaNoiseOptions;
  /**
   * The speed at which the nebula rotates.
   * @default 0.000000005
   */
  rotationSpeed?: number;
}
