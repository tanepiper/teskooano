---
import { getCollection, type CollectionEntry, render } from "astro:content";
import StarlightPage from "@astrojs/starlight/components/StarlightPage.astro";
// Markdown component is built-in, no explicit import needed usually
// import { Markdown } from 'astro/components';

export async function getStaticPaths() {
  const plans = await getCollection("plan");
  return plans.map((entry) => ({
    params: { plan: entry.data.plan },
    props: { entry },
  }));
}

interface Props {
  entry: CollectionEntry<"plan">;
}

const { entry } = Astro.props;
const { Content } = await render(entry);


// Prepare frontmatter for StarlightPage - minimal to avoid type errors
const frontmatter = {
  title: entry.data.title,
  tableOfContents: {
    minHeadingLevel: 2,
    maxHeadingLevel: 6
  },
  // editUrl: false, // Removing this again to see if title alone works
};
---

<StarlightPage frontmatter={frontmatter}>
  {/* Optional: Add a manual breadcrumb/back link if needed */}
  <a href="/plan/" class="back-link sl-link">&larr; Back to Plans</a>

  {/* Add H1 back as we are minimizing frontmatter props */}
  <h1>{frontmatter.title}</h1>

  <div class="metadata">
    {/* Removed status */}
    {/* Optionally display plan number */}
    {entry.data.plan && <span><strong>Plan #:</strong> {entry.data.plan}</span>}
    {entry.data.author && <span><strong>Author:</strong> {entry.data.author}</span>}
    {entry.data.released && <span>{entry.data.released.toLocaleDateString('en-GB', { year: '2-digit', month: 'short', day: 'numeric' })}</span>}
  </div>

  <hr />

  <Content />
</StarlightPage>

<style>
  /* Keep styles specific to this page's content */
  .back-link {
    display: inline-block;
    margin-bottom: 1rem;
  }

  h1 {
    margin-top: 1rem; /* Add space below back link */
    margin-bottom: 0.5rem;
    font-size: var(--sl-text-4xl); /* Adjust size if needed */
  }

  .metadata {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem 1.5rem; /* Row and column gap */
    margin-top: 1rem; /* Add some space above */
    margin-bottom: 1rem;
    font-size: var(--sl-text-sm);
    color: var(--sl-color-gray-3);
  }
  .metadata span {
    display: inline-block;
  }

  hr {
    border: none;
    border-top: 1px solid var(--sl-color-hairline);
    margin: 1.5rem 0;
  }

  /* Remove <pre> specific styles if no longer needed, 
     or keep if you might use <pre> elsewhere */
  /* pre {
    background-color: var(--sl-color-bg-inline-code, #f5f5f5);
    padding: 1em;
    border-radius: 4px;
    overflow-x: auto;
    font-family: var(--sl-font-mono, monospace);
    color: var(--sl-color-text);
    border: 1px solid var(--sl-color-hairline, #ddd);
    font-size: var(--sl-text-sm);
    line-height: var(--sl-line-height);
  } */
</style>

