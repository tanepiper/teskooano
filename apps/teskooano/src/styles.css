:root {
  --color-background: #1a1a2e; /* Dark Navy Blue */
  --color-surface: #2a2a3e; /* Slightly Lighter Navy/Grey */
  --color-text: #e0e0fc; /* Light Lavender/White */
  --color-primary: #6c63ff; /* A Purple/Blue Accent */
  --color-border: #4a4a6a; /* Muted Border Color */

  /* Base font sizes - improved for better scaling */
  --font-size-base: 16px;
  --font-size-small: 0.875rem; /* 14px at base size */
  --font-size-medium: 1rem; /* 16px at base size */
  --font-size-large: 1.125rem; /* 18px at base size */

  /* Spacing variables */
  --spacing-xs: 0.25rem;
  --spacing-sm: 0.5rem;
  --spacing-md: 1rem;
  --spacing-lg: 1.5rem;

  /* Component sizing */
  --toolbar-height: 3.125rem; /* Equivalent to 50px at 16px base, but scales with font */

  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;
  font-size: var(--font-size-base);

  color-scheme: light dark;
  color: var(--color-text);
  background-color: var(--color-background);

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

html,
body {
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
}

body {
  min-width: 320px;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
}

/* --- Orientation Layout - REMOVED --- */
/*
#app.layout-landscape {
  display: flex;
  flex-direction: row; /* Toolbar and Dockview side-by-side */
/*}

#app.layout-landscape #toolbar {
  width: auto; /* Let it size based on content or a fixed width */
/*  height: 100%; /* Full height */
/*  flex-direction: column; /* Toolbar items stacked vertically */
/*  border-right: 1px solid var(--color-border);
  border-bottom: none;
  /* Add fixed width or min/max width as needed */
/*  /* width: 200px; */
/*}

#app.layout-landscape .dockview-container {
  /* Dockview takes remaining space */
/*  flex-grow: 1;
}

#app.layout-portrait {
  display: flex;
  flex-direction: column; /* Toolbar above Dockview */
/*}

#app.layout-portrait #toolbar {
  height: auto; /* Allow wrapping */
/*  min-height: var(--toolbar-height);
  width: 100%;
  flex-direction: row; /* Toolbar items horizontally */
/*  border-bottom: 1px solid var(--color-border);
  border-right: none;
  flex-wrap: wrap; /* Allow items to wrap */
/*}

#app.layout-portrait .dockview-container {
  /* Dockview takes remaining space */
/*  flex-grow: 1;
}
*/
/* ----------------------- */

#toolbar {
  height: var(--toolbar-height); /* Keep this for portrait default */
  width: 100%;
  background-color: var(--color-surface);
  border-bottom: 1px solid var(--color-border);
  display: flex;
  align-items: center;
  justify-content: flex-start;
  padding: 0 var(--spacing-sm);
  box-sizing: border-box;
  flex-wrap: nowrap;
  gap: var(--spacing-sm);
  flex-shrink: 0; /* Prevent toolbar from shrinking */
  /* text-align: center; */
  overflow: hidden;
  position: relative; /* Creates new stacking context */
  /* display: flex; is now handled by orientation classes - REVERTED */
  display: flex; /* Re-apply display: flex as it's the default now */
  flex-direction: row; /* Ensure items are laid out horizontally */
}

#app {
  width: 100%;
  flex: 1; /* Use flexbox model for better height calculation */
  margin: 0 auto;
  /* Remove text-align: center; if flex handles alignment */
  /* text-align: center; */
  overflow: hidden;
  position: relative; /* Creates new stacking context */
  /* display: flex; is now handled by orientation classes */
}

/* Better scaling for simulation controls buttons */
toolbar-simulation-controls {
  display: flex;
  align-items: center;
  gap: var(--spacing-xs);
}

/* Basic button styling with better sizing */
button {
  border-radius: 0.5rem;
  border: 1px solid transparent;
  padding: var(--spacing-xs) var(--spacing-sm);
  font-size: var(--font-size-medium);
  font-weight: 500;
  font-family: inherit;
  background-color: var(--color-surface);
  color: var(--color-text);
  cursor: pointer;
  transition: border-color 0.25s;
}
button:hover {
  border-color: var(--color-primary);
}
button:focus,
button:focus-visible {
  outline: 2px solid var(--color-primary);
  outline-offset: 2px;
}

/* Dockview specific overrides - adjust as needed */
.dockview-theme-abyss {
  --dv-background-color: var(--color-background);
  --dv-pane-background-color: var(--color-surface);
  --dv-separator-border: var(--color-border);
  --dv-tabs-and-actions-container-background-color: var(--color-surface);
  --dv-active-tab-background-color: var(--color-background);
  --dv-tab-background-color: var(--color-surface);
  --dv-tab-color: var(--color-text);
  --dv-tab-border: var(--color-border);
  --dv-group-control-background-color: var(--color-surface);
}

.toolbar-cosmic-background {
  /* Base dark color (matches the one set previously) */
  background-color: var(--color-surface-deep, #1a1a2e);

  /* Adjusted layered gradients for a more visible nebula */
  background-image: 
    /* Faint directional haze */
    linear-gradient(160deg, hsla(280, 40%, 25%, 0.15) 0%, transparent 40%),
    /* Brighter purple cloud, slightly larger */
      radial-gradient(
        ellipse at 25% 35%,
        hsla(260, 55%, 40%, 0.35) 0%,
        transparent 60%
      ),
    /* Brighter cyan cloud, shifted */
      radial-gradient(
        ellipse at 75% 65%,
        hsla(180, 60%, 35%, 0.3) 0%,
        transparent 55%
      );

  /* Ensure background doesn't repeat if element is larger */
  background-repeat: no-repeat;
}

/* Larger screens */
@media only screen and(min-width: 1200px) {
  :root {
    --font-size-base: 18px; /* Slightly larger text on bigger screens */
  }
}

@media only screen and (min-width: 1024px) {
  .composite-engine-panel .ui-container collapsible-section {
    min-height: 36px; /* Use fit-content instead of fixed height */
    margin-bottom: var(--spacing-xs); /* Smaller margins */
  }
}

/* Medium screens - now starts at 1024px */
@media only screen and (max-width: 1024px) {
  /* 
   * LAYOUT NOTE: At this breakpoint (1024px), the internal layout orientation 
   * should switch from landscape (engine-left, UI-right) to portrait (engine-top, UI-bottom).
   * This would be handled by JavaScript detecting window size in the CompositeEnginePanel.
   */

  #toolbar {
    gap: var(--spacing-xs); /* Less space between items */
    flex-wrap: wrap; /* Allow wrapping on medium screens too */
    height: auto;
    min-height: var(--toolbar-height);
  }

  /* Allow toolbar items to have less fixed width */
  #toolbar > * {
    flex-shrink: 1;
    flex-basis: auto;
    min-width: 0;
  }

  /* Make sure the seed-input component doesn't take too much space */
  toolbar-seed-form teskooano-input-field {
    width: 80px;
  }

  /* Apply specific styling to toolbar-simulation-controls at medium sizes */
  toolbar-simulation-controls {
    flex-wrap: wrap;
    gap: 2px;
  }

  /* Make simulation controls buttons smaller at medium sizes */
  toolbar-simulation-controls teskooano-button {
    padding: 2px 4px;
  }

  /* Make the time display more compact */
  toolbar-simulation-controls .display-value {
    min-width: auto;
    font-size: 0.85em;
    padding: 2px 4px;
  }

  /* Logo size adjustments */
  .app-logo,
  #app-logo {
    max-height: 30px !important;
  }

  /* Make buttons more compact */
  #toolbar teskooano-button {
    --button-font-size: 0.9rem;
    --button-padding-y: 0.4rem;
    --button-padding-x: 0.7rem;
  }

  /* Hide text on some buttons, show only icons */
  #toolbar #github-button span:not([slot="icon"]),
  #toolbar #settings-button span:not([slot="icon"]) {
    display: none;
  }

  /* For smaller screens, ensure the panel layout is more compact */
  .composite-engine-panel .ui-container collapsible-section {
    min-height: fit-content; /* Use fit-content instead of fixed height */
    margin-bottom: var(--spacing-xs); /* Smaller margins */
  }

  /* Reduce min-heights for containers on smaller screens */
  .composite-engine-panel.layout-internal-landscape
    .ui-container
    > .left-ui-container,
  .composite-engine-panel.layout-internal-portrait
    .ui-container
    > .left-ui-container {
    min-height: 100px; /* Smaller min height on mobile */
  }

  .composite-engine-panel.layout-internal-landscape
    .ui-container
    > .right-ui-container,
  .composite-engine-panel.layout-internal-portrait
    .ui-container
    > .right-ui-container {
    min-height: 150px; /* Smaller min height on mobile */
  }

  /* Ensure minimum UI container height is appropriate for mobile */
  .composite-engine-panel.layout-internal-portrait .ui-container {
    min-height: 180px; /* Slightly smaller minimum height */
    max-height: 50%; /* Allow a bit more height on mobile */
  }
}

/* Better handle "awkward" widths like 833px specifically */
@media only screen and(max-width: 900px) and (min-width: 769px) {
  /* Force more aggressive wrapping at these in-between sizes */
  #toolbar {
    padding: var(--spacing-xs); /* Tighter padding */
  }

  /* Logo size for awkward widths */
  .app-logo,
  #app-logo {
    max-height: 28px !important;
  }

  /* Ensure toolbar items don't push width */
  #toolbar > * {
    margin-right: var(--spacing-xs);
    margin-bottom: var(--spacing-xs);
  }

  /* Compact the seed form specifically */
  toolbar-seed-form {
    flex-basis: 100%; /* Force to new line */
    margin-top: var(--spacing-xs);
  }

  /* Make the input wider when it's on its own line */
  toolbar-seed-form teskooano-input-field {
    width: 120px; /* Restore width since it has more space now */
  }

  /* Make buttons even more compact */
  #toolbar teskooano-button {
    --button-font-size: 0.85rem;
    --button-padding-y: 0.35rem;
    --button-padding-x: 0.6rem;
  }

  /* Smaller text for "Add Teskooano" button */
  #toolbar #add-view-button {
    padding: 0.3rem 0.5rem;
  }
}

/* Small screens / tablets */
@media only screen and(max-width: 768px) {
  :root {
    --toolbar-height: auto; /* Allow toolbar to expand vertically */
  }

  /* Smaller logo for tablets */
  .app-logo,
  #app-logo {
    max-height: 26px !important;
  }

  #toolbar {
    flex-wrap: wrap;
    padding: var(--spacing-xs) var(--spacing-sm);
    gap: var(--spacing-xs);
    min-height: 3.125rem; /* Minimum height to match desktop */
  }

  /* Allow direct children of toolbar to shrink and wrap */
  #toolbar > * {
    flex-shrink: 1;
    flex-basis: auto;
    min-width: 0;
    margin-bottom: var(--spacing-xs);
  }

  /* Target the simulation controls component */
  toolbar-simulation-controls {
    flex-wrap: wrap;
    justify-content: center;
  }

  /* Adjust button sizes for touch targets */
  button {
    padding: 0.5rem 0.8rem; /* Slightly larger touch target */
  }

  /* Further reduce button size */
  #toolbar teskooano-button {
    --button-font-size: 0.8rem;
    --button-padding-y: 0.3rem;
    --button-padding-x: 0.5rem;
  }

  /* Show icons only for all buttons except Add button */
  #toolbar teskooano-button:not(#add-view-button) span:not([slot="icon"]) {
    display: none;
  }

  /* Compact "Add" button */
  #toolbar #add-view-button span:not([slot="icon"]) {
    font-size: 0.8rem;
  }
}

/* Mobile phones */
@media only screen and(max-width: 480px) {
  :root {
    --font-size-base: 14px; /* Slightly smaller base font to fit more content */
  }

  /* Extra small logo for mobile */
  .app-logo,
  #app-logo {
    max-height: 24px !important;
  }

  #toolbar {
    padding: var(--spacing-xs) var(--spacing-xs);
  }

  button {
    padding: 0.4rem 0.6rem; /* Compact but still touchable */
    font-size: var(--font-size-small);
  }

  /* Smallest button size for mobile */
  #toolbar teskooano-button {
    --button-font-size: 0.75rem;
    --button-padding-y: 0.25rem;
    --button-padding-x: 0.4rem;
  }

  /* Remove text from Add button too on very small screens */
  #toolbar #add-view-button span:not([slot="icon"]) {
    display: none;
  }

  /* Make separator lines shorter */
  #toolbar div[style*="height: calc(var(--toolbar-height"] {
    height: calc(var(--toolbar-height, 50px) * 0.4) !important;
  }
}

/* Logo styling - override inline styles in toolbarController.ts */
.app-logo,
#app-logo {
  height: calc(
    var(--toolbar-height, 50px) * 0.7
  ) !important; /* Override the inline style */
  width: auto !important;
  max-height: 35px !important; /* Cap the maximum size */
}

/* Add specific styling for toolbar buttons */
#toolbar teskooano-button {
  --button-font-size: var(--font-size-medium, 1rem);
  --button-padding-y: 0.5rem;
  --button-padding-x: 0.8rem;
  font-size: var(--button-font-size);
}

/* Dockview specific overrides - get the container for orientation */
.dockview-container {
  width: 100%;
  height: 100%;
}

/* --- Composite Panel Internal Layout --- */
.composite-engine-panel {
  /* Base settings for the panel */
  display: flex;
  width: 100%;
  height: 100%;
}

/* 
 * LAYOUT NOTE: At the 1024px breakpoint, the internal layout orientation 
 * should switch from landscape (engine-left, UI-right) to portrait (engine-top, UI-bottom).
 * This would be handled by JavaScript detecting window size in the CompositeEnginePanel.
 */

/* === PORTRAIT LAYOUT (Device Landscape) === */
.composite-engine-panel.layout-internal-landscape {
  flex-direction: row; /* Engine on left, UI on right */
}

/* Engine takes 2/3 width in portrait */
.composite-engine-panel.layout-internal-landscape .engine-container {
  flex: 2; /* 2/3 width */
  overflow: hidden;
  position: relative;
}

/* UI container takes 1/3 width in portrait */
.composite-engine-panel.layout-internal-landscape .ui-container {
  flex: 1; /* 1/3 width */
  border-left: 1px solid var(--color-border);
  overflow: hidden; /* Don't scroll the container itself */
  display: flex;
  flex-direction: column; /* Stack the UI sections vertically */
}

/* Top UI section (Focus Control) */
.composite-engine-panel.layout-internal-landscape
  .ui-container
  > .left-ui-container {
  flex: 0 0 auto; /* Height based on content */
  width: 100%;
  padding: var(--spacing-sm);
  overflow-y: auto; /* Allow scrolling within top section if needed */
  box-sizing: border-box;
  max-height: 40%; /* Ensure it doesn't take more than 40% of the height */
  min-height: 100px; /* Minimum height even if content is collapsed */
}

/* Bottom UI section (Other panels) */
.composite-engine-panel.layout-internal-landscape
  .ui-container
  > .right-ui-container {
  flex: 1; /* Take remaining height */
  width: 100%;
  padding: var(--spacing-sm);
  overflow-y: auto; /* Allow scrolling within bottom section */
  box-sizing: border-box;
  border-top: 1px solid var(--color-border);
  min-height: 60%; /* Ensure it takes at least 60% of the height */
}

/* === LANDSCAPE LAYOUT (Device Portrait) === */
.composite-engine-panel.layout-internal-portrait {
  flex-direction: column; /* Engine on top, UI below */
}

/* Engine takes majority height in landscape */
.composite-engine-panel.layout-internal-portrait .engine-container {
  flex: 1; /* Fill available height */
  overflow: hidden;
  position: relative;
}

/* UI container fixed max-height in landscape */
.composite-engine-panel.layout-internal-portrait .ui-container {
  flex: 0 0 auto; /* Height based on content */
  max-height: 40%; /* Maximum 40% height */
  min-height: 200px; /* Minimum height to ensure panels are visible */
  border-top: 1px solid var(--color-border);
  display: flex;
  flex-direction: row; /* Place UI sections side by side */
}

/* Left UI section (Focus Control) */
.composite-engine-panel.layout-internal-portrait
  .ui-container
  > .left-ui-container {
  flex: 0 0 33%; /* 1/3 width */
  height: 100%;
  padding: var(--spacing-sm);
  overflow-y: auto; /* Allow scrolling */
  box-sizing: border-box;
  border-right: 1px solid var(--color-border);
  min-height: 200px; /* Minimum height even if content is collapsed */
}

/* Right UI section (Other panels) */
.composite-engine-panel.layout-internal-portrait
  .ui-container
  > .right-ui-container {
  flex: 0 0 67%; /* 2/3 width */
  height: 100%;
  padding: var(--spacing-sm);
  overflow-y: auto; /* Allow scrolling */
  box-sizing: border-box;
  display: flex; /* Make it a flex container */
  flex-direction: column; /* Stack panels vertically */
  min-height: 200px; /* Minimum height even if content is collapsed */
}

/* Ensure all collapsible sections are displayed properly */
.composite-engine-panel .ui-container collapsible-section {
  width: 100%;
  margin-bottom: var(--spacing-sm);
  /* Ensure minimum height for the section even when collapsed */
  min-height: fit-content; /* Height of header */
}

/* Target specific components inside the collapsible sections */
.composite-engine-panel
  .right-ui-container
  collapsible-section
  renderer-info-display,
.composite-engine-panel .right-ui-container collapsible-section celestial-info,
.composite-engine-panel
  .right-ui-container
  collapsible-section
  engine-ui-settings-panel {
  display: block;
  width: 100%;
  min-height: 30px; /* Ensure minimum height */
}

/* --- End Composite Panel Layout --- */
